version: '3.4'

services:
  jirascrapper:
    image: ${DOCKER_REGISTRY-}jirascrapper
    ports:
      - "5001:443"
      - "8081:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=5001
      - Logging__Loglevel__Default=Debug 
      - Logging__Loglevel__Microsoft.AspNetCore=Debug 
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./https/aspnetapp.pfx:/https/aspnetapp.pfx:ro
    build:
      context: .
      dockerfile: JiraScrapper/Dockerfile
    networks:
      - backend

  gateway:
    image: ${DOCKER_REGISTRY-}gateway
    ports:
      - "5002:443"
      - "8082:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=5002
      - Logging__Loglevel__Default=Debug 
      - Logging__Loglevel__Microsoft.AspNetCore=Debug 
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./https/aspnetapp.pfx:/https/aspnetapp.pfx:ro
    build:
      context: .
      dockerfile: Gateway/Dockerfile
    networks:
      - backend

  dataaccessservice:
    image: ${DOCKER_REGISTRY-}dataaccessservice
    ports:
      - "5003:443"
      - "8083:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=5003
      - Logging__Loglevel__Default=Debug 
      - Logging__Loglevel__Microsoft.AspNetCore=Debug 
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./https/aspnetapp.pfx:/https/aspnetapp.pfx:ro
    build:
      context: .
      dockerfile: DataAccessService/Dockerfile
    networks:
      - backend

  cassandra-node1:
    image: cassandra:latest
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
    environment:
      - CASSANDRA_CLUSTER_NAME=cassandra-cluster
      - CASSANDRA_SEEDS=cassandra-node1,cassandra-node2,cassandra-node3
      - CASSANDRA_PASSWORD_SEEDER=yes
      - CASSANDRA_PASSWORD=password123
      - CASSANDRA_DATACENTER=datacenter1
    ports:
      - "9042:9042"
    networks:
      - backend
 
  cassandra-node2:
    image: cassandra:latest
    environment:
      - CASSANDRA_CLUSTER_NAME=cassandra-cluster
      - CASSANDRA_SEEDS=cassandra-node1,cassandra-node2,cassandra-node3
      - CASSANDRA_PASSWORD=password123
      - CASSANDRA_DATACENTER=datacenter1
    ports:
      - "9043:9043"
    networks:
      - backend
 
  cassandra-node3:
    image: cassandra:latest
    environment:
      - CASSANDRA_CLUSTER_NAME=cassandra-cluster
      - CASSANDRA_SEEDS=cassandra-node1,cassandra-node2,cassandra-node3
      - CASSANDRA_PASSWORD=password123
      - CASSANDRA_DATACENTER=datacenter1 
    ports:
      - "9044:9044"
    networks:
      - backend

networks:
  backend:
  frontend:
