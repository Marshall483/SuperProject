name: dockercompose8611608043351235670
services:
  cassandra-node1:
    environment:
      CASSANDRA_CLUSTER_NAME: cassandra-cluster
      CASSANDRA_DATACENTER: datacenter1
      CASSANDRA_PASSWORD: password123
      CASSANDRA_PASSWORD_SEEDER: "yes"
      CASSANDRA_SEEDS: cassandra-node1,cassandra-node2,cassandra-node3
    image: bitnami/cassandra:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 9042
      published: "9042"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\REPOS\ASS\SuperProject\DotnetServices\init-scripts
      target: /docker-entrypoint-initdb.d
      bind:
        create_host_path: true
  cassandra-node2:
    environment:
      CASSANDRA_CLUSTER_NAME: cassandra-cluster
      CASSANDRA_DATACENTER: datacenter1
      CASSANDRA_PASSWORD: password123
      CASSANDRA_SEEDS: cassandra-node1,cassandra-node2,cassandra-node3
    image: bitnami/cassandra:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 9043
      published: "9043"
      protocol: tcp
  cassandra-node3:
    environment:
      CASSANDRA_CLUSTER_NAME: cassandra-cluster
      CASSANDRA_DATACENTER: datacenter1
      CASSANDRA_PASSWORD: password123
      CASSANDRA_SEEDS: cassandra-node1,cassandra-node2,cassandra-node3
    image: bitnami/cassandra:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 9044
      published: "9044"
      protocol: tcp
  dataaccessservice:
    build:
      context: C:\REPOS\ASS\SuperProject\DotnetServices
      dockerfile: DataAccessService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: dataaccessservice
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8083"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\al.putilin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  gateway:
    build:
      context: C:\REPOS\ASS\SuperProject\DotnetServices
      dockerfile: Gateway/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: gateway
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8082"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\al.putilin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  jirascrapper:
    build:
      context: C:\REPOS\ASS\SuperProject\DotnetServices
      dockerfile: JiraScrapper/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: jirascrapper
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8081"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\al.putilin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose8611608043351235670_default