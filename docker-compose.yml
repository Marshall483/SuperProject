version: '3.1'
services:
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    restart: always
    depends_on:
      - postgres
      - redis
      - rabbitmq
    env_file: # Pass environment variables to the service
      - backend.env
    networks:
      - backend

  postgres:
    restart: always
    image: postgres:14.0-alpine
    ports:
      - "5433:5432"
    env_file:
      - backend.env
    volumes:
      - "db-data:/var/lib/postgresql/data"
    networks:
      - backend

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/var/lib/redis
    networks:
      - backend

  rabbitmq:
    restart: always
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "5673:5673"
      - "15672:15672"
    networks:
      - backend

  consumer_xlsx:
    restart: always
    build:
      context: ./consumer-xlsx
      dockerfile: Dockerfile
    depends_on:
      #      - producer
      - rabbitmq
    env_file:
      - backend.env
    networks:
      - backend

  cassandra:
    image: cassandra:4.0.3
    restart: always
    networks:
      - backend
    ports:
      - "7000:7000"
      - "9042:9042"
    volumes:
      - cassandra-data:/var/lib/cassandra
    env_file:
      backend.env
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces" ]
      interval: 15s
      timeout: 10s
      retries: 10

  pahlava:
    restart: always
    build:
      context: ./pahlava
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - frontend

volumes:
  db-data:
  redis-data:
  cassandra-data:

networks:
  backend:
  frontend: